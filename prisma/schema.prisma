generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model brands {
  id        Int        @id @default(autoincrement())
  brandName String     @unique @db.VarChar(50)
  brandImg  String     @db.VarChar(300)
  createdAt DateTime   @default(now()) @db.Timestamp(0)
  updatedAt DateTime   @default(now()) @db.Timestamp(0)
  products  products[]
}

model categories {
  id           Int        @id @default(autoincrement())
  categoryName String     @unique @db.VarChar(50)
  categoryImg  String     @db.VarChar(300)
  createdAt    DateTime   @default(now()) @db.Timestamp(0)
  updatedAt    DateTime   @default(now()) @db.Timestamp(0)
  products     products[]
}

model customer_profiles {
  id              Int               @id @default(autoincrement())
  cus_name        String            @db.VarChar(100)
  cus_add         String            @db.VarChar(500)
  cus_city        String            @db.VarChar(50)
  cus_state       String            @db.VarChar(50)
  cus_postcode    String            @db.VarChar(50)
  cus_country     String            @db.VarChar(50)
  cus_phone       String            @db.VarChar(50)
  cus_fax         String            @db.VarChar(50)
  ship_name       String            @db.VarChar(100)
  ship_add        String            @db.VarChar(100)
  ship_city       String            @db.VarChar(100)
  ship_state      String            @db.VarChar(100)
  ship_postcode   String            @db.VarChar(100)
  ship_country    String            @db.VarChar(100)
  ship_phone      String            @db.VarChar(50)
  user_id         Int               @unique
  createdAt       DateTime          @default(now()) @db.Timestamp(0)
  updatedAt       DateTime          @default(now()) @db.Timestamp(0)
  users           users             @relation(fields: [user_id], references: [id])
  product_reviews product_reviews[]
}

model features {
  id          Int    @id @default(autoincrement())
  name        String
  img         String @db.VarChar(300)
  description String @db.LongText
}

model invoice_products {
  id         Int      @id @default(autoincrement())
  invoice_id Int
  product_id Int
  user_id    Int
  qty        Float
  sale_price Float
  color      String   @db.VarChar(50)
  size       String   @db.VarChar(50)
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @db.Timestamp(0)
  invoices   invoices @relation(fields: [invoice_id], references: [id])
  products   products @relation(fields: [product_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])

  @@index([invoice_id], map: "invoice_products_invoice_id_fkey")
  @@index([product_id], map: "invoice_products_product_id_fkey")
  @@index([user_id], map: "invoice_products_user_id_fkey")
}

model invoices {
  id               Int                      @id @default(autoincrement())
  total            Float
  vat              Float
  payable          Float
  cus_details      String                   @db.VarChar(500)
  ship_details     String                   @db.VarChar(500)
  tran_id          String                   @db.VarChar(100)
  val_id           String                   @default("0") @db.VarChar(100)
  delivery_status  invoices_delivery_status
  payment_status   String                   @db.VarChar(255)
  user_id          Int
  createdAt        DateTime                 @default(now()) @db.Timestamp(0)
  updatedAt        DateTime                 @default(now()) @db.Timestamp(0)
  invoice_products invoice_products[]
  users            users                    @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "invoices_user_id_fkey")
}

model policies {
  id   Int           @id @default(autoincrement())
  type policies_type
  des  String        @db.LongText
}

model product_carts {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  color      String   @db.VarChar(200)
  size       String   @db.VarChar(200)
  qty        Float
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @db.Timestamp(0)
  products   products @relation(fields: [product_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])

  @@index([product_id], map: "product_carts_product_id_fkey")
  @@index([user_id], map: "product_carts_user_id_fkey")
}

model product_details {
  id         Int      @id @default(autoincrement())
  img1       String   @db.VarChar(200)
  img2       String   @db.VarChar(200)
  img3       String   @db.VarChar(200)
  img4       String   @db.VarChar(200)
  img5       String   @db.VarChar(200)
  img6       String   @db.VarChar(200)
  img7       String   @db.VarChar(200)
  img8       String   @db.VarChar(200)
  des        String   @db.LongText
  color      String   @db.VarChar(200)
  size       String   @db.VarChar(200)
  product_id Int      @unique
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @db.Timestamp(0)
  products   products @relation(fields: [product_id], references: [id])
}

model product_reviews {
  id                Int               @id @default(autoincrement())
  description       String            @db.VarChar(1000)
  rating            String            @db.VarChar(10)
  customer_id       Int
  product_id        Int
  createdAt         DateTime          @default(now()) @db.Timestamp(0)
  updatedAt         DateTime          @default(now()) @db.Timestamp(0)
  customer_profiles customer_profiles @relation(fields: [customer_id], references: [id])
  products          products          @relation(fields: [product_id], references: [id])

  @@index([customer_id], map: "product_reviews_customer_id_fkey")
  @@index([product_id], map: "product_reviews_product_id_fkey")
}

model product_sliders {
  id         Int      @id @default(autoincrement())
  title      String   @db.VarChar(200)
  short_des  String   @db.VarChar(500)
  price      String   @db.VarChar(100)
  image      String   @db.VarChar(200)
  product_id Int      @unique
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @db.Timestamp(0)
  products   products @relation(fields: [product_id], references: [id])
}

model product_wishes {
  id         Int      @id @default(autoincrement())
  product_id Int
  user_id    Int
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @db.Timestamp(0)
  products   products @relation(fields: [product_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])

  @@index([product_id], map: "product_wishes_product_id_fkey")
  @@index([user_id], map: "product_wishes_user_id_fkey")
}

model products {
  id               Int                @id @default(autoincrement())
  title            String             @db.VarChar(200)
  short_des        String             @db.VarChar(500)
  price            Float
  discount         Boolean
  discount_price   Float
  image            String             @db.VarChar(200)
  stock            Boolean
  star             Float
  remark           products_remark
  category_id      Int
  brand_id         Int
  createdAt        DateTime           @default(now()) @db.Timestamp(0)
  updatedAt        DateTime           @default(now()) @db.Timestamp(0)
  invoice_products invoice_products[]
  product_carts    product_carts[]
  product_details  product_details?
  product_reviews  product_reviews[]
  product_sliders  product_sliders?
  product_wishes   product_wishes[]
  brands           brands             @relation(fields: [brand_id], references: [id])
  categories       categories         @relation(fields: [category_id], references: [id])

  @@index([brand_id], map: "products_brand_id_fkey")
  @@index([category_id], map: "products_category_id_fkey")
}

model sslcommerz_accounts {
  id           Int      @id @default(autoincrement())
  store_id     String   @db.VarChar(255)
  store_passwd String   @db.VarChar(255)
  currency     String   @db.VarChar(255)
  success_url  String   @db.VarChar(255)
  fail_url     String   @db.VarChar(255)
  cancel_url   String   @db.VarChar(255)
  ipn_url      String   @db.VarChar(255)
  init_url     String   @db.VarChar(255)
  createdAt    DateTime @default(now()) @db.Timestamp(0)
  updatedAt    DateTime @default(now()) @db.Timestamp(0)
}

model users {
  id                Int                @id @default(autoincrement())
  email             String             @unique
  otp               String             @db.VarChar(10)
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @db.Timestamp(0)
  customer_profiles customer_profiles?
  invoice_products  invoice_products[]
  invoices          invoices[]
  product_carts     product_carts[]
  product_wishes    product_wishes[]
}

enum policies_type {
  about
  refund
  terms
  contact
  complain
}

enum invoices_delivery_status {
  Pending
  Processing
  Completed
}

enum products_remark {
  popular
  new
  top
  special
  trending
  regular
}
